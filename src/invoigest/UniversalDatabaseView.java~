/*
 * UniversalDatabaseView.java
 */

package universaldatabase;

import javax.swing.JTable;
import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.persistence.EntityExistsException;
import javax.persistence.FlushModeType;
import javax.persistence.PersistenceException;
import javax.persistence.Query;
import javax.persistence.RollbackException;
import javax.persistence.TransactionRequiredException;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.application.Application;
import universaldatabase.Libri;

/**
 * The application's main frame.
 */
public class UniversalDatabaseView extends FrameView {
    private String categoria="Scegli..";
    private String ricerca;
    private String campo="Titolo";
    private String titolo;
    private String autore;
    private String casa;
    private String anno;
    private String genere;
    private int idMod;
    private Query q;
    
    public UniversalDatabaseView(SingleFrameApplication app) {
        super(app);
        FrameView app2=new FrameView(app);

        Application appp =org.jdesktop.application.Application.getInstance(universaldatabase.UniversalDatabaseApp.class);
       FrameView app3=new FrameView(appp);
       app3.getFrame().setResizable(false);


        initComponents();


        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);
        progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(true);

                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    statusAnimationLabel.setIcon(idleIcon);
                    progressBar.setVisible(false);
                    progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                    statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(false);
                    progressBar.setValue(value);
                }
            }
        });
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = UniversalDatabaseApp.getApplication().getMainFrame();
            aboutBox = new UniversalDatabaseAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        UniversalDatabaseApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        mainPanel = new javax.swing.JPanel();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jInternalFrame2 = new javax.swing.JInternalFrame();
        jDesktopPane4 = new javax.swing.JDesktopPane();
        jButton10 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jInternalFrame3 = new javax.swing.JInternalFrame();
        jDesktopPane3 = new javax.swing.JDesktopPane();
        jButton7 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jDesktopPane2 = new javax.swing.JDesktopPane();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jButton9 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jInternalFrame4 = new javax.swing.JInternalFrame();
        jDesktopPane5 = new javax.swing.JDesktopPane();
        jButton11 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jTextField6 = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        statusPanel = new javax.swing.JPanel();
        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(universaldatabase.UniversalDatabaseApp.class).getContext().getResourceMap(UniversalDatabaseView.class);
        universaldbPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory(resourceMap.getString("universaldbPUEntityManager.persistenceUnit")).createEntityManager(); // NOI18N
        videoQuery = java.beans.Beans.isDesignTime() ? null : universaldbPUEntityManager.createQuery("SELECT v FROM Video v");
        videoList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : videoQuery.getResultList();
        musicaQuery = java.beans.Beans.isDesignTime() ? null : universaldbPUEntityManager.createQuery("SELECT m FROM Musica m");
        musicaList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : musicaQuery.getResultList();
        libriQuery = java.beans.Beans.isDesignTime() ? null : universaldbPUEntityManager.createQuery("SELECT l FROM Libri l");
        libriList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : libriQuery.getResultList();

        mainPanel.setMaximumSize(new java.awt.Dimension(1001, 601));
        mainPanel.setMinimumSize(new java.awt.Dimension(999, 599));
        mainPanel.setName("mainPanel"); // NOI18N
        mainPanel.setPreferredSize(new java.awt.Dimension(1000, 600));

        jDesktopPane1.setMaximumSize(new java.awt.Dimension(1001, 599));
        jDesktopPane1.setMinimumSize(new java.awt.Dimension(999, 599));
        jDesktopPane1.setName("jDesktopPane1"); // NOI18N
        jDesktopPane1.setPreferredSize(new java.awt.Dimension(1000, 600));

        jInternalFrame2.setBackground(resourceMap.getColor("jInternalFrame2.background")); // NOI18N
        jInternalFrame2.setName("jInternalFrame2"); // NOI18N
        jInternalFrame2.setVisible(true);

        jDesktopPane4.setName("jDesktopPane4"); // NOI18N

        jButton10.setText(resourceMap.getString("jButton10.text")); // NOI18N
        jButton10.setName("jButton10"); // NOI18N
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jButton10.setBounds(120, 110, 50, 23);
        jDesktopPane4.add(jButton10, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel4.setIcon(resourceMap.getIcon("jLabel4.icon")); // NOI18N
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N
        jLabel4.setBounds(0, 0, 300, 170);
        jDesktopPane4.add(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jInternalFrame2Layout = new javax.swing.GroupLayout(jInternalFrame2.getContentPane());
        jInternalFrame2.getContentPane().setLayout(jInternalFrame2Layout);
        jInternalFrame2Layout.setHorizontalGroup(
            jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame2Layout.createSequentialGroup()
                .addComponent(jDesktopPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(0, Short.MAX_VALUE))
        );
        jInternalFrame2Layout.setVerticalGroup(
            jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame2Layout.createSequentialGroup()
                .addComponent(jDesktopPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jInternalFrame2.setBounds(440, 10, 310, 200);
        jDesktopPane1.add(jInternalFrame2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jInternalFrame2.setVisible(false);
        jInternalFrame2.setResizable(false);

        jInternalFrame3.setName("jInternalFrame3"); // NOI18N
        jInternalFrame3.setVisible(true);

        jDesktopPane3.setBackground(resourceMap.getColor("jDesktopPane3.background")); // NOI18N
        jDesktopPane3.setName("jDesktopPane3"); // NOI18N

        jButton7.setText(resourceMap.getString("jButton7.text")); // NOI18N
        jButton7.setName("jButton7"); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jButton7.setBounds(130, 120, 47, 23);
        jDesktopPane3.add(jButton7, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel3.setIcon(resourceMap.getIcon("jLabel3.icon")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N
        jLabel3.setBounds(0, 0, 300, 170);
        jDesktopPane3.add(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jInternalFrame3Layout = new javax.swing.GroupLayout(jInternalFrame3.getContentPane());
        jInternalFrame3.getContentPane().setLayout(jInternalFrame3Layout);
        jInternalFrame3Layout.setHorizontalGroup(
            jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
        jInternalFrame3Layout.setVerticalGroup(
            jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
        );

        jInternalFrame3.setBounds(450, 60, 310, 200);
        jDesktopPane1.add(jInternalFrame3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jInternalFrame3.setVisible(false);
        jInternalFrame3.setResizable(false);

        jInternalFrame1.setMaximumSize(new java.awt.Dimension(400, 300));
        jInternalFrame1.setMinimumSize(new java.awt.Dimension(399, 299));
        jInternalFrame1.setName("jInternalFrame1"); // NOI18N
        jInternalFrame1.setPreferredSize(new java.awt.Dimension(400, 300));
        jInternalFrame1.setVisible(true);

        jDesktopPane2.setBackground(resourceMap.getColor("jDesktopPane2.background")); // NOI18N
        jDesktopPane2.setMaximumSize(new java.awt.Dimension(401, 301));
        jDesktopPane2.setMinimumSize(new java.awt.Dimension(399, 299));
        jDesktopPane2.setName("jDesktopPane2"); // NOI18N
        jDesktopPane2.setPreferredSize(new java.awt.Dimension(400, 300));

        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.setBounds(240, 250, 50, 23);
        jDesktopPane2.add(jButton2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jButton2.setVisible(false);

        jButton3.setText(resourceMap.getString("jButton3.text")); // NOI18N
        jButton3.setName("jButton3"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jButton3.setBounds(300, 250, 70, 23);
        jDesktopPane2.add(jButton3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTextField1.setText(resourceMap.getString("jTextField1.text")); // NOI18N
        jTextField1.setName("jTextField1"); // NOI18N
        jTextField1.setBounds(100, 10, 280, 20);
        jDesktopPane2.add(jTextField1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTextField2.setText(resourceMap.getString("jTextField2.text")); // NOI18N
        jTextField2.setName("jTextField2"); // NOI18N
        jTextField2.setBounds(100, 50, 280, 20);
        jDesktopPane2.add(jTextField2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTextField3.setText(resourceMap.getString("jTextField3.text")); // NOI18N
        jTextField3.setName("jTextField3"); // NOI18N
        jTextField3.setBounds(100, 80, 280, 20);
        jDesktopPane2.add(jTextField3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTextField4.setText(resourceMap.getString("jTextField4.text")); // NOI18N
        jTextField4.setName("jTextField4"); // NOI18N
        jTextField4.setBounds(100, 140, 280, 20);
        jDesktopPane2.add(jTextField4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTextField5.setText(resourceMap.getString("jTextField5.text")); // NOI18N
        jTextField5.setName("jTextField5"); // NOI18N
        jTextField5.setBounds(100, 190, 280, 20);
        jDesktopPane2.add(jTextField5, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton9.setText(resourceMap.getString("jButton9.text")); // NOI18N
        jButton9.setName("jButton9"); // NOI18N
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jButton9.setBounds(90, 250, 80, 23);
        jDesktopPane2.add(jButton9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jButton9.setVisible(false);

        jLabel2.setIcon(resourceMap.getIcon("jLabel2.icon")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setMaximumSize(new java.awt.Dimension(401, 301));
        jLabel2.setMinimumSize(new java.awt.Dimension(399, 299));
        jLabel2.setName("jLabel2"); // NOI18N
        jLabel2.setBounds(0, 0, 400, 280);
        jDesktopPane2.add(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addComponent(jDesktopPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addComponent(jDesktopPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jInternalFrame1.setBounds(20, 20, 410, 320);
        jDesktopPane1.add(jInternalFrame1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jInternalFrame1.setVisible(false);
        jInternalFrame1.setResizable(false);

        jInternalFrame4.setName("jInternalFrame4"); // NOI18N
        jInternalFrame4.setVisible(true);

        jDesktopPane5.setName("jDesktopPane5"); // NOI18N

        jButton11.setText(resourceMap.getString("jButton11.text")); // NOI18N
        jButton11.setName("jButton11"); // NOI18N
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jButton11.setBounds(110, 110, 47, 23);
        jDesktopPane5.add(jButton11, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel5.setIcon(resourceMap.getIcon("jLabel5.icon")); // NOI18N
        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N
        jLabel5.setBounds(0, 0, 300, 170);
        jDesktopPane5.add(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jInternalFrame4Layout = new javax.swing.GroupLayout(jInternalFrame4.getContentPane());
        jInternalFrame4.getContentPane().setLayout(jInternalFrame4Layout);
        jInternalFrame4Layout.setHorizontalGroup(
            jInternalFrame4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jInternalFrame4Layout.setVerticalGroup(
            jInternalFrame4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jInternalFrame4.setBounds(480, 120, 310, 200);
        jDesktopPane1.add(jInternalFrame4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jInternalFrame4.setVisible(false);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setName("jTable1"); // NOI18N
        jTable1.getTableHeader().setReorderingAllowed(false);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, libriList, jTable1);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${IDLibro}"));
        columnBinding.setColumnName("IDLibro");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${titolo}"));
        columnBinding.setColumnName("Titolo");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${autore}"));
        columnBinding.setColumnName("Autore");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${casa}"));
        columnBinding.setColumnName("Casa");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${anno}"));
        columnBinding.setColumnName("Anno");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${genere}"));
        columnBinding.setColumnName("Genere");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane1.setViewportView(jTable1);
        jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        jScrollPane1.setBounds(20, 250, 960, 330);
        jDesktopPane1.add(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jScrollPane1.setVisible(false);

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        jTable2.setName("jTable2"); // NOI18N
        jTable2.getTableHeader().setReorderingAllowed(false);

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, musicaList, jTable2);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${IDMusica}"));
        columnBinding.setColumnName("IDMusica");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${titolo}"));
        columnBinding.setColumnName("Titolo");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${autore}"));
        columnBinding.setColumnName("Autore");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${casa}"));
        columnBinding.setColumnName("Casa");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${anno}"));
        columnBinding.setColumnName("Anno");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${genere}"));
        columnBinding.setColumnName("Genere");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);

        jScrollPane2.setViewportView(jTable2);
        jTable2.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        jScrollPane2.setBounds(20, 253, 960, 330);
        jDesktopPane1.add(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jScrollPane2.setVisible(false);

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        jTable3.setName("jTable3"); // NOI18N
        jTable3.getTableHeader().setReorderingAllowed(false);

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, videoList, jTable3);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${IDVideo}"));
        columnBinding.setColumnName("IDVideo");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${titolo}"));
        columnBinding.setColumnName("Titolo");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${autore}"));
        columnBinding.setColumnName("Autore");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${casa}"));
        columnBinding.setColumnName("Casa");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${anno}"));
        columnBinding.setColumnName("Anno");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${genere}"));
        columnBinding.setColumnName("Genere");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);

        jScrollPane3.setViewportView(jTable3);
        jTable3.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        jScrollPane3.setBounds(20, 253, 960, 330);
        jDesktopPane1.add(jScrollPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jScrollPane3.setVisible(false);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Scegli..", "Libri", "Musica", "Video" }));
        jComboBox1.setName("jComboBox1"); // NOI18N
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jComboBox1.setBounds(820, 70, 120, 30);
        jDesktopPane1.add(jComboBox1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.setBounds(620, 130, 100, 30);
        jDesktopPane1.add(jButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton4.setText(resourceMap.getString("jButton4.text")); // NOI18N
        jButton4.setName("jButton4"); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jButton4.setBounds(730, 130, 100, 30);
        jDesktopPane1.add(jButton4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTextField6.setText(resourceMap.getString("jTextField6.text")); // NOI18N
        jTextField6.setName("jTextField6"); // NOI18N
        jTextField6.setBounds(300, 190, 270, 30);
        jDesktopPane1.add(jTextField6, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Titolo", "Autore", "Casa Di Produzione", "Anno Di Pubblicazione", "Genere" }));
        jComboBox2.setName("jComboBox2"); // NOI18N
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        jComboBox2.setBounds(590, 190, 120, 30);
        jDesktopPane1.add(jComboBox2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton5.setText(resourceMap.getString("jButton5.text")); // NOI18N
        jButton5.setName("jButton5"); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jButton5.setBounds(840, 130, 100, 30);
        jDesktopPane1.add(jButton5, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton6.setText(resourceMap.getString("jButton6.text")); // NOI18N
        jButton6.setName("jButton6"); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jButton6.setBounds(730, 190, 70, 30);
        jDesktopPane1.add(jButton6, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton8.setText(resourceMap.getString("jButton8.text")); // NOI18N
        jButton8.setName("jButton8"); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jButton8.setBounds(810, 190, 130, 30);
        jDesktopPane1.add(jButton8, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel1.setIcon(resourceMap.getIcon("jLabel1.icon")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setMaximumSize(new java.awt.Dimension(1001, 601));
        jLabel1.setMinimumSize(new java.awt.Dimension(999, 599));
        jLabel1.setName("jLabel1"); // NOI18N
        jLabel1.setBounds(0, 0, 1000, 600);
        jDesktopPane1.add(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(universaldatabase.UniversalDatabaseApp.class).getContext().getActionMap(UniversalDatabaseView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        statusPanel.setName("statusPanel"); // NOI18N

        statusPanelSeparator.setName("statusPanelSeparator"); // NOI18N

        statusMessageLabel.setName("statusMessageLabel"); // NOI18N

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

        progressBar.setName("progressBar"); // NOI18N

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 999, Short.MAX_VALUE)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusMessageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 829, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusAnimationLabel)
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusMessageLabel)
                    .addComponent(statusAnimationLabel)
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3))
        );

        universaldbPUEntityManager.setFlushMode(FlushModeType.AUTO);

        setComponent(mainPanel);
        setMenuBar(menuBar);
        setStatusBar(statusPanel);
	setResizable(false);

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
       JComboBox cb = (JComboBox)evt.getSource();
         categoria = (String)cb.getSelectedItem();
        if(categoria.contains("Musica")){
            jScrollPane2.setVisible(true);
            jScrollPane1.setVisible(false);
            jScrollPane3.setVisible(false);
        AggiornamentoTabelle.aggiornaNomeColonne(jTable2,categoria);}
        else if(categoria.contains("Video")){
            jScrollPane3.setVisible(true);
            jScrollPane1.setVisible(false);
            jScrollPane2.setVisible(false);
        AggiornamentoTabelle.aggiornaNomeColonne(jTable3,categoria);}
        else if(categoria.contains("Libri")){
            jScrollPane1.setVisible(true);
            jScrollPane2.setVisible(false);
            jScrollPane3.setVisible(false);
        AggiornamentoTabelle.aggiornaNomeColonne(jTable1,categoria);}
          else if(categoria.contains("Scegli..")){
            jScrollPane1.setVisible(false);
            jScrollPane2.setVisible(false);
            jScrollPane3.setVisible(false);}

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        categoria = (String)jComboBox1.getSelectedItem();
        if(categoria.contains("Scegli..")){
            jInternalFrame2.setVisible(true);
        }else{ jInternalFrame1.setVisible(true);
        jButton2.setVisible(true);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
     jInternalFrame1.setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       ArrayList<Object> value=new ArrayList<Object>();
        categoria = (String)jComboBox1.getSelectedItem();
        JTable tabella = AggiornamentoTabelle.controlloRiga(categoria, jTable1, jTable2, jTable3);
        int riga= tabella.getSelectedRow();
        if(categoria.contains("Scegli..")){
            jInternalFrame2.setVisible(true);
            
        }else if (riga == -1){
            jInternalFrame3.setVisible(true);
        }else {
            jInternalFrame1.setVisible(true);
            jButton9.setVisible(true);
            ArrayList<String> valori=new ArrayList<String>();
            if(categoria.contains("Libri")){
                valori=AggiornamentoTabelle.datiModifica(jTable1);
            }else if(categoria.contains("Musica")){
                valori=AggiornamentoTabelle.datiModifica(jTable2);
            }else if(categoria.contains("Video")){
                valori=AggiornamentoTabelle.datiModifica(jTable3);
            }
          idMod=Integer.parseInt(valori.get(0));
          String titoloMod=valori.get(1);
          String autoreMod=valori.get(2);
          String casaMod=valori.get(3);
          String annoMod=valori.get(4);
          String genereMod=valori.get(5);
           jTextField1.setText(titoloMod);
           jTextField2.setText(autoreMod);
           jTextField3.setText(casaMod);
           jTextField4.setText(annoMod);
           jTextField5.setText(genereMod);
           
           
          

        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
          DefaultTableModel model = new DefaultTableModel(0, 6);
          if(categoria.contains("Scegli..")){
            jInternalFrame2.setVisible(true);
        }else {
            jInternalFrame2.setVisible(false);
        ricerca = jTextField6.getText();
        if(ricerca.contentEquals("")){jInternalFrame4.setVisible(true);}
        else{
       
        String namedQuery=categoria+"."+campo.toLowerCase();

        q= universaldbPUEntityManager.createNamedQuery(namedQuery);
        q.setParameter(campo.toLowerCase(), ricerca);
       
       
        model=AggiornamentoTabelle.risultatoRicerca(q,categoria);
        if(categoria.contains("Libri")){
            
            jTable1.setModel(model);
            AggiornamentoTabelle.aggiornaNomeColonne(jTable1,categoria);
         
            }else if(categoria.contains("Musica")){
                
            jTable2.setModel(model);
            AggiornamentoTabelle.aggiornaNomeColonne(jTable2,categoria);
            }else if(categoria.contains("Video")){
            
           jTable3.setModel(model);
            AggiornamentoTabelle.aggiornaNomeColonne(jTable3,categoria);
            }
        }
        
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
         JComboBox cb = (JComboBox)evt.getSource();
         campo = (String)cb.getSelectedItem();
         if(campo.contains("Anno Di Pubblicazione")){
             campo="anno";
         }
         else if(campo.contains("Casa Di Produzione")){
             campo="casa";
         }
         else {campo.toLowerCase();}

   

    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      titolo  = jTextField1.getText();
      autore  = jTextField2.getText();
     casa  = jTextField3.getText();
     anno = jTextField4.getText();
     genere  = jTextField5.getText();
    
  
        
        boolean controllo=AggiornamentoTabelle.controlloDati(titolo, autore, anno, casa, genere);
        System.out.println(controllo);
        try{
        if(controllo==true){jInternalFrame1.setVisible(false);}
        else if(controllo==false){
            jInternalFrame1.setVisible(false);
            DefaultTableModel model = new DefaultTableModel(0, 6);
            universaldbPUEntityManager.getTransaction().begin();
         if(categoria.contains("Libri")){
            int id=AggiornamentoTabelle.numeroID("Libro",categoria, universaldbPUEntityManager);
            Libri l= new Libri();
            l.setIDLibro(id+1);
            l.setTitolo(titolo);
            l.setAutore(autore);
            l.setCasa(casa);
            l.setAnno(anno);
            l.setGenere(genere);
            
            universaldbPUEntityManager.persist(l);
             universaldbPUEntityManager.flush();
            //universaldbPUEntityManager.getTransaction().commit();
            q= universaldbPUEntityManager.createNamedQuery("Libri.findAll");
            model=AggiornamentoTabelle.risultatoRicerca(q, categoria);
            jTable1.setModel(model);
            AggiornamentoTabelle.aggiornaNomeColonne(jTable1,categoria);

            }else if(categoria.contains("Musica")){
               int id=AggiornamentoTabelle.numeroID(categoria,categoria, universaldbPUEntityManager);
                Musica m = new Musica(id+1);
            
            m.setTitolo(titolo);
            m.setAutore(autore);
            m.setCasa(casa);
            m.setAnno(anno);
            m.setGenere(genere);
            //universaldbPUEntityManager.getTransaction().begin();
            universaldbPUEntityManager.persist(m);
            universaldbPUEntityManager.flush();
            //universaldbPUEntityManager.getTransaction().commit();

            q= universaldbPUEntityManager.createNamedQuery("Musica.findAll");
            model=AggiornamentoTabelle.risultatoRicerca(q, categoria);
            jTable2.setModel(model);
            AggiornamentoTabelle.aggiornaNomeColonne(jTable2,categoria);
            }else if(categoria.contains("Video")){
            Video v = new Video();
            int id=AggiornamentoTabelle.numeroID(categoria,categoria, universaldbPUEntityManager);
            v.setIDVideo(id+1);
            v.setTitolo(titolo);
            v.setAutore(autore);
            v.setCasa(casa);
            v.setAnno(anno);
            v.setGenere(genere);
            //universaldbPUEntityManager.getTransaction().begin();
            universaldbPUEntityManager.persist(v);
            universaldbPUEntityManager.flush();
            q= universaldbPUEntityManager.createNamedQuery("Video.findAll");
        
            model=AggiornamentoTabelle.risultatoRicerca(q, categoria);
            jTable3.setModel(model);
            AggiornamentoTabelle.aggiornaNomeColonne(jTable3,categoria);
            }
            universaldbPUEntityManager.getTransaction().commit();
        }
            
        }catch(IllegalStateException e){
        System.out.println("Connessione non riuscita");
        }catch(RollbackException e ){
        System.out.println("Impossibile chiudere la connessione");
        }catch(EntityExistsException e){
            System.out.println("L'entità passata già esiste");
        }catch(IllegalArgumentException e){
            System.out.println("Quella passata non è un Entità");
        }catch(TransactionRequiredException e){}


        jButton2.setVisible(false);
        jInternalFrame1.setVisible(false);
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
             
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
       categoria = (String)jComboBox1.getSelectedItem();
       int riga= jTable1.getSelectedRow();
       try{
        if(categoria.contains("Scegli..")){
            jInternalFrame2.setVisible(true);
        }else if (riga == -1){
            jInternalFrame3.setVisible(true);
        }else {
           ArrayList<String> valori=new ArrayList<String>();
           Object oggettoRimuovi=new Object();
           universaldbPUEntityManager.getTransaction().begin();
            if(categoria.contains("Libri")){
                valori=AggiornamentoTabelle.datiModifica(jTable1); 
                idMod=Integer.parseInt(valori.get(0));
                oggettoRimuovi=universaldbPUEntityManager.find(Libri.class, idMod);
            }else if(categoria.contains("Musica")){
                valori=AggiornamentoTabelle.datiModifica(jTable2);
                idMod=Integer.parseInt(valori.get(0));
                oggettoRimuovi=universaldbPUEntityManager.find(Musica.class, idMod);
            }else if(categoria.contains("Video")){
                valori=AggiornamentoTabelle.datiModifica(jTable3);
                idMod=Integer.parseInt(valori.get(0));
                oggettoRimuovi=universaldbPUEntityManager.find(Video.class, idMod);
                
            }
         
           
           universaldbPUEntityManager.flush();
           universaldbPUEntityManager.remove(oggettoRimuovi);
          
           universaldbPUEntityManager.flush();
          
          
          String namedQuery=categoria+".findAll";
          q= universaldbPUEntityManager.createNamedQuery(namedQuery);
          universaldbPUEntityManager.flush();
          universaldbPUEntityManager.getTransaction().commit();
          DefaultTableModel model = new DefaultTableModel(0, 6);
          model=AggiornamentoTabelle.risultatoRicerca(q, categoria);
            if(categoria.contains("Libri")){

            jTable1.setModel(model);
            AggiornamentoTabelle.aggiornaNomeColonne(jTable1,categoria);

            }else if(categoria.contains("Musica")){

            jTable2.setModel(model);
            AggiornamentoTabelle.aggiornaNomeColonne(jTable2,categoria);
            }else if(categoria.contains("Video")){

            jTable3.setModel(model);
            AggiornamentoTabelle.aggiornaNomeColonne(jTable3,categoria);
            }
        
           
        }
      }catch(IllegalStateException ex){
        System.out.println("Connessione non riuscita");
        }catch(RollbackException ex ){
        System.out.println("Impossibile chiudere la connessione");
        }catch(EntityExistsException ex){
            System.out.println("L'entità passata già esiste");
        }catch(IllegalArgumentException ex){
            System.out.println("Quella passata non è un Entità");
        }catch(TransactionRequiredException ex){}
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed

        try{
        if(categoria.contains("Scegli..")){
            jInternalFrame2.setVisible(true);
        }else {
            jInternalFrame2.setVisible(false);
        DefaultTableModel model = new DefaultTableModel(0, 6);
        String namedQuery=categoria+".findAll";
        universaldbPUEntityManager.getTransaction().begin();
        q = universaldbPUEntityManager.createNamedQuery(namedQuery);
        universaldbPUEntityManager.flush();
        universaldbPUEntityManager.getTransaction().commit();
        model=AggiornamentoTabelle.risultatoRicerca(q, categoria);
        if(categoria.contains("Libri")){

            jTable1.setModel(model);
            AggiornamentoTabelle.aggiornaNomeColonne(jTable1,categoria);

            }else if(categoria.contains("Musica")){

            jTable2.setModel(model);
            AggiornamentoTabelle.aggiornaNomeColonne(jTable2,categoria);
            }else if(categoria.contains("Video")){

            jTable3.setModel(model);
            AggiornamentoTabelle.aggiornaNomeColonne(jTable3,categoria);
            }
        }
        }catch(IllegalStateException ey){
        System.out.println("Connessione non riuscita");
        }catch(RollbackException ey ){
        System.out.println("Impossibile chiudere la connessione");
        }catch(EntityExistsException ey){
            System.out.println("L'entità passata già esiste");
        }catch(IllegalArgumentException ey){
            System.out.println("Quella passata non è un Entità");
        }catch(TransactionRequiredException ey){}
        catch(PersistenceException ey){}
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
     String titoloM  = jTextField1.getText();
     String autoreM  = jTextField2.getText();
     String casaM  = jTextField3.getText();
     String annoM = jTextField4.getText();
     String genereM  = jTextField5.getText();
     boolean controllo=false;

try{
      universaldbPUEntityManager.getTransaction().begin();
       controllo = AggiornamentoTabelle.controlloDati(titoloM, autoreM, annoM, casaM, genereM);
        if(controllo==false){
            jInternalFrame1.setVisible(false);
            ArrayList<String> valori=new ArrayList<String>();
           Object oggettoModifica=new Object();
           Video video=new Video();
          
            if(categoria.contains("Libri")){
                valori=AggiornamentoTabelle.datiModifica(jTable1);
                idMod=Integer.parseInt(valori.get(0));
                oggettoModifica=universaldbPUEntityManager.find(Libri.class, idMod);
                Libri libro=(Libri)oggettoModifica;
                libro.setTitolo(titoloM);
                libro.setAutore(autoreM);
                libro.setAnno(annoM);
                libro.setCasa(casaM);
                libro.setGenere(genereM);
                oggettoModifica=(Object)libro;
            }else if(categoria.contains("Musica")){
                valori=AggiornamentoTabelle.datiModifica(jTable2);
                idMod=Integer.parseInt(valori.get(0));
                oggettoModifica=universaldbPUEntityManager.find(Musica.class, idMod);
                Musica musica=(Musica)oggettoModifica;
                musica.setTitolo(titoloM);
                musica.setAutore(autoreM);
                musica.setAnno(annoM);
                musica.setCasa(casaM);
                musica.setGenere(genereM);
                oggettoModifica=(Object)musica;
            }else if(categoria.contains("Video")){
                valori=AggiornamentoTabelle.datiModifica(jTable3);
                idMod=Integer.parseInt(valori.get(0));
                oggettoModifica=universaldbPUEntityManager.find(Video.class, idMod);
                video=(Video)oggettoModifica;
                video.setTitolo(titoloM);
                video.setAutore(autoreM);
                video.setAnno(annoM);
                video.setCasa(casaM);
                video.setGenere(genereM);
                oggettoModifica=(Object)video;

            }

           
           universaldbPUEntityManager.merge(oggettoModifica);

          universaldbPUEntityManager.flush(); 
          String namedQuery=categoria+".findAll";
          q = universaldbPUEntityManager.createNamedQuery(namedQuery);
          
          
          DefaultTableModel model = new DefaultTableModel(0, 6);
          model=AggiornamentoTabelle.risultatoRicerca(q, categoria);
        if(categoria.contains("Libri")){

            jTable1.setModel(model);
            AggiornamentoTabelle.aggiornaNomeColonne(jTable1,categoria);

            }else if(categoria.contains("Musica")){

            jTable2.setModel(model);
            AggiornamentoTabelle.aggiornaNomeColonne(jTable2,categoria);
            }else if(categoria.contains("Video")){

            jTable3.setModel(model);
            AggiornamentoTabelle.aggiornaNomeColonne(jTable3,categoria);
            }
        }else{jInternalFrame1.setVisible(false);
        System.out.println(controllo);}
       
          universaldbPUEntityManager.getTransaction().commit();
}catch(IllegalStateException ep){
        System.out.println("Connessione non riuscita");
        }catch(RollbackException ep ){
        System.out.println("Impossibile chiudere la connessione");
        }catch(EntityExistsException ep){
            System.out.println("L'entità passata già esiste");
        }catch(IllegalArgumentException ep){
            System.out.println("Quella passata non è un Entità");
        }catch(TransactionRequiredException ep){}
        catch(PersistenceException ep){}      
             jButton9.setVisible(false);
             jTextField1.setText("");
             jTextField2.setText("");
             jTextField3.setText("");
             jTextField4.setText("");
             jTextField5.setText("");
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        jInternalFrame3.setVisible(false);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
     jInternalFrame4.setVisible(false);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
     jInternalFrame2.setVisible(false);
    }//GEN-LAST:event_jButton10ActionPerformed
      
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JDesktopPane jDesktopPane2;
    private javax.swing.JDesktopPane jDesktopPane3;
    private javax.swing.JDesktopPane jDesktopPane4;
    private javax.swing.JDesktopPane jDesktopPane5;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JInternalFrame jInternalFrame2;
    private javax.swing.JInternalFrame jInternalFrame3;
    private javax.swing.JInternalFrame jInternalFrame4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private java.util.List<universaldatabase.Libri> libriList;
    private javax.persistence.Query libriQuery;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private java.util.List<universaldatabase.Musica> musicaList;
    private javax.persistence.Query musicaQuery;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    private javax.persistence.EntityManager universaldbPUEntityManager;
    private java.util.List<universaldatabase.Video> videoList;
    private javax.persistence.Query videoQuery;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;

    private JDialog aboutBox;
}
